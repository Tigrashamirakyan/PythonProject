import streamlit as st
import requests
import pdfplumber
import docx2txt
import pandas as pd
import json

# –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ processing.py
from processing import process_text_and_files

st.title("üîç –í–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –∏ —Ñ–∞–π–ª–æ–≤")
st.write("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã (TXT, PDF, DOCX, CSV) –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤—Ä—É—á–Ω—É—é –¥–ª—è –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.")

uploaded_files = st.file_uploader(
    "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏", 
    type=["txt", "pdf", "docx", "csv"], 
    accept_multiple_files=True
)
manual_text = st.text_area("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤—Ä—É—á–Ω—É—é", placeholder="–í—Å—Ç–∞–≤—å—Ç–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∑–¥–µ—Å—å...")

selected_model = st.selectbox(
    "–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏", 
    ["openai", "yandex", "sentence_transformer"]
)
webhook_url = st.text_input("Webhook URL", "https://example.com/webhook")

# –¢—É–º–±–ª–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–º–µ—Ä–∞ —á–∞–Ω–∫–æ–≤
chunk_size_option = st.radio(
    "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä —á–∞–Ω–∫–∞:",
    ("500 –ö–ë", "1 –ú–ë", "2 –ú–ë")
)

if chunk_size_option == "500 –ö–ë":
    chunk_size = 500 * 1024
elif chunk_size_option == "1 –ú–ë":
    chunk_size = 1 * 1024 * 1024
elif chunk_size_option == "2 –ú–ë":
    chunk_size = 2 * 1024 * 1024

st.write(f"–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä —á–∞–Ω–∫–∞: {chunk_size_option} ({chunk_size} –±–∞–π—Ç)")

if st.button("üß† –í–µ–∫—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å"):
    try:
        # –ü–µ—Ä–µ–¥–∞—ë–º –Ω–æ–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä chunk_size –≤ —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏
        result = process_text_and_files(
            uploaded_files, manual_text, selected_model, webhook_url, chunk_size=chunk_size
        )
        if result:
            st.success("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ Webhook!")
        else:
            st.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö.")
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞: {e}")
